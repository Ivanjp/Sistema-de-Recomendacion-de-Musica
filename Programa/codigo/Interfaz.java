/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package IA;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jorge Iván Pérez Pérez
 */
public class Interfaz extends javax.swing.JFrame {

    Config cn = new Config();//Constructor de la clase donde se encuentran las operaciones
    DefaultTableModel modelo = new DefaultTableModel();//Constructor de la tabla donde se verán los resultados
    int count = 0;//Variable que contará el número de canciónes recomendadas

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        Explicacion.setVisible(false);//Hacemos que el botón para ver la explicación de los resultados permanesca oculto
        this.setLocationRelativeTo(null);//Posisionamos la ventana en el centro de la pantalla
        this.setResizable(false);//Hacemos que no se pueda cambiar de tamaño la ventana
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Buscar = new javax.swing.JButton();
        Cancion1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        CheckC1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Artista1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Cancion2 = new javax.swing.JTextField();
        Artista2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        CheckC2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Cancion3 = new javax.swing.JTextField();
        Artista3 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        CheckC3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        Explicacion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Recomendación de Música");

        Buscar.setText("Buscar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        Cancion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cancion1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Canción 1:");

        CheckC1.setText("Checar");
        CheckC1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckC1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre Canción");

        jLabel3.setText("Artista");

        Artista1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Artista1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Nombre Canción");

        jLabel5.setText("Artista");

        Cancion2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cancion2ActionPerformed(evt);
            }
        });

        Artista2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Artista2ActionPerformed(evt);
            }
        });

        jLabel6.setText("Canción 2:");

        CheckC2.setText("Checar");
        CheckC2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckC2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Nombre Canción");

        jLabel8.setText("Artista");

        Cancion3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cancion3ActionPerformed(evt);
            }
        });

        Artista3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Artista3ActionPerformed(evt);
            }
        });

        jLabel9.setText("Canción 3:");

        CheckC3.setText("Checar");
        CheckC3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckC3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jButton1.setText("Limpiar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Explicacion.setText("¿Porqué me da estos resultados?");
        Explicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExplicacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CheckC1)
                                    .addComponent(CheckC2)
                                    .addComponent(CheckC3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel9))
                                        .addGap(35, 35, 35)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel2)
                                            .addComponent(Cancion1, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                            .addComponent(jLabel4)
                                            .addComponent(Cancion2)
                                            .addComponent(jLabel7)
                                            .addComponent(Cancion3))
                                        .addGap(64, 64, 64)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(Artista1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5)
                                            .addComponent(Artista2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8)
                                            .addComponent(Artista3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Buscar)
                                .addGap(14, 14, 14)))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(401, 401, 401)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Explicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(Cancion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Artista1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CheckC1)
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Cancion2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Artista2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CheckC2)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Cancion3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Artista3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(CheckC3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Buscar))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(Explicacion))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

/*
    *Boton que tiene como función checar que la canción 1 y el artista 1 este en la Base de Datos
    */    
    private void CheckC1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckC1ActionPerformed
        // TODO add your handling code here:
        String cancion1 = Cancion1.getText();//Obtenemos el texto del jTextField
        String artista1 = Artista1.getText();//Obtenemos el texto del jTextField
        try {
            // TODO add your handling code here:
            cn.ConectarBD();//Hacemos la conexión con la BD
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }

        cn.Checar(cancion1, artista1);//Mandamos a llamar al método Checar de la clase Config

    }//GEN-LAST:event_CheckC1ActionPerformed

    private void Cancion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancion1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_Cancion1ActionPerformed

    private void Artista1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Artista1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_Artista1ActionPerformed

    private void Cancion2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancion2ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_Cancion2ActionPerformed

    private void Artista2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Artista2ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_Artista2ActionPerformed

    private void Cancion3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancion3ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_Cancion3ActionPerformed

    private void Artista3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Artista3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Artista3ActionPerformed
/*
    *Boton que tiene como función checar que la canción 2 y el artista 2 este en la Base de Datos
    */
    private void CheckC2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckC2ActionPerformed
        // TODO add your handling code here:
        String cancion2 = Cancion2.getText();//Obtenemos el texto del jTextField
        String artista2 = Artista2.getText();//Obtenemos el texto del jTextField
        try {
            // TODO add your handling code here:
            cn.ConectarBD();//Hacemos la conexión con la BD
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }

        cn.Checar(cancion2, artista2);//Mandamos a llamar al método Checar de la clase Config
    }//GEN-LAST:event_CheckC2ActionPerformed
/*
    *Boton que tiene como función checar que la canción 3 y el artista 3 este en la Base de Datos
    */
    private void CheckC3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckC3ActionPerformed
        // TODO add your handling code here:
        String cancion3 = Cancion3.getText();//Obtenemos el texto del jTextField
        String artista3 = Artista3.getText();//Obtenemos el texto del jTextField
        try {
            // TODO add your handling code here:
            cn.ConectarBD();//Hacemos la conexión con la BD
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }

        cn.Checar(cancion3, artista3);//Mandamos a llamar al método Checar de la clase Config

    }//GEN-LAST:event_CheckC3ActionPerformed
    /*
    *Boton que tiene como función hacer la búsqueda de las recomendaciones músicales
    */
    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        // Guardamos las canciones y los artistas de los jTextField para enviarselo a los métodos de Config y realicen la búsqueda
        String c1 = Cancion1.getText();
        String c2 = Cancion2.getText();
        String c3 = Cancion3.getText();
        String a1 = Artista1.getText();
        String a2 = Artista2.getText();
        String a3 = Artista3.getText();

        try {
            cn.RecopilaGeneros(c1, c2, c3, a1, a2, a3);//Mandamos a llamar al método RecopilaGeneros de la clase Config
            cn.RecopilaEnergia(c1, c2, c3, a1, a2, a3);//Mandamos a llamar al método RecopilaEnergia de la clase Config
            cn.RecopilaValencia(c1, c2, c3, a1, a2, a3);//Mandamos a llamar al método RecopilaValencia de la clase Config
        } catch (SQLException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        cn.QuitarGenRep();//Mandamos a llamar al método QuitarGenRep de la clase Config

        try {

            ResultSet r = cn.Resultados();//Mandamos a llamar al método Resultados de la clase Config y guardamos el resultado en r
            //Creamos las columnas de la tabla
            modelo.setColumnIdentifiers(new Object[]{"Genero", "Artista", "Cancion"});

            while (r.next()) {
                modelo.addRow(new Object[]{r.getString("genero"), r.getString("artista"), r.getString("cancion")});//Añadimos los datos a la tabla
            }

            jTable1.setModel(modelo);//Asignamos el modelo a la tabla final
            count = jTable1.getRowCount();//Contamos los registros resultantes y lo guardamos en count
            jLabel11.setVisible(true);//Hacemos visible el recuadro donde se vera el total de resultados
            jLabel11.setText("Numero de registros: " + count + " de 232680");//Ponemos el texto en el recuadro
            Explicacion.setVisible(true);//Hacemos visible el boton de ver la explicación de los resultados
        } catch (SQLException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_BuscarActionPerformed
    /*
    *Boton que tiene como función limpiar todos los datos de la pantalla
    */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            modelo.removeRow(i);//limpiamos la tabla
            i -= 1;
        }
        jLabel11.setVisible(false);//Volvemos a ocultar el texto del total de registros
        //Limpiamos los jTextField
        Cancion1.setText("");
        Cancion2.setText("");
        Cancion3.setText("");
        Artista1.setText("");
        Artista2.setText("");
        Artista3.setText("");
        Explicacion.setVisible(false);//Volvemos a ocultar el botón de explicación

    }//GEN-LAST:event_jButton1ActionPerformed
/*
    *Boton que tiene como función mandar la información a la 2da ventana en donde se verá el porqué de las recomendaciones
    */
    private void ExplicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExplicacionActionPerformed
        // TODO add your handling code here:
        //Guardamos los datos de las canciones
        String c1 = Cancion1.getText();
        String c2 = Cancion2.getText();
        String c3 = Cancion3.getText();
        String a1 = Artista1.getText();
        String a2 = Artista2.getText();
        String a3 = Artista3.getText();
        ArrayList copia = new ArrayList();//Creamos un arraylist en donde copiaremos los datos del arreglo de géneros de la clase Config
        copia = (ArrayList) cn.generos.clone();//Copiamos los datos al Array que creamos
        copia.toArray();//Pasamos el ArrayList a Array para despues poder convertirlo a String
        String g = copia.toString();//Pasamos los datos del Arreglo a un String para poder ponerlos en el texto
        Info i = new Info();//Hacemos la instancia a la nueva ventana
        //Ponemos el texto en la 2da ventana, lo ponemos como html para poder poner saltos de línea
        i.jLabel2.setText("<html><body>Cada canción que seleccionaste tiene varias caracteristicas, entre ellas aparte del género tiene una caracteristica llamada <br>Energía y Valencia, pero.. ¿que son?</body><html>");
        i.jLabel3.setText("<html><body>La Energía de una canción se refiera a que tan intensa es una canción es decir que tan rapida,lenta,ruidosa o calmada puede ser una canción.<br><br>"
                + "Por ejemplo, el death metal tiene alta energía, mientras que un preludio de Bach es más tranquila. <br><br>"
                + "Por su parte la Valencia nos dice la positividad de una canción es decir con esto podemos saber que tan feliz,triste,euforica,deprimente puede ser una canción. </body><html>");
        i.jLabel4.setText("<html><body>Por lo tanto teniendo los valores de estas características de las canciones que seleccionaste y su género podemos recomendarte canciones con el género de las canciones que seleccionaste y que esten dentro de la Energía y Valencia de estas.<body><hyml>");
        i.jLabel5.setText("<html><body>Los datos de tus canciones seleccionadas son las siguientes: <br><br><br>"
                + "Canción 1: "+c1+"--Artista 1: "+a1+"--Energía : "+cn.ee1+"--Valencia : "+cn.vv1+"<br><br>"
                + "Canción 2: "+c2+"--Artista 2: "+a2+"--Energía : "+cn.ee2+"--Valencia : "+cn.vv2+"<br><br>"
                + "Canción 3: "+c3+"--Artista 3: "+a3+"--Energía : "+cn.ee3+"--Valencia : "+cn.vv3+"<br><br>"
                + "Estos son los géneros a los que pertenecen tus canciones: <br><br>"
                + "Géneros: "+g+"<br><br>"
                + "Por lo tanto tus canciones recomendadas serán de "+g+" con energía entre "+cn.mine+" - "+cn.maxe+" y "
                + "valencia entre "+cn.minv+" - "+cn.maxv);
        i.setVisible(true);//Hacemos visible la 2da ventana
        
    }//GEN-LAST:event_ExplicacionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Artista1;
    private javax.swing.JTextField Artista2;
    private javax.swing.JTextField Artista3;
    private javax.swing.JButton Buscar;
    private javax.swing.JTextField Cancion1;
    private javax.swing.JTextField Cancion2;
    private javax.swing.JTextField Cancion3;
    private javax.swing.JButton CheckC1;
    private javax.swing.JButton CheckC2;
    private javax.swing.JButton CheckC3;
    private javax.swing.JButton Explicacion;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
